generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              String          @id
  firstName       String
  lastName        String
  email           String          @unique
  userworkspace   UserWorkspace[]
  invitations     Invitation[]    @relation("invitedUser")
  invitationsSend Invitation[]    @relation("user")
  Transaction     Transaction[]
}

model UserWorkspace {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId Int

  @@index([workspaceId])
  @@index([userId])
}

model Workspace {
  id                Int             @id @default(autoincrement())
  name              String
  currentAmount     Float           @default(0)
  userWorkspace     UserWorkspace[]
  categoryWorkspace Category[]
  transaction       Transaction[]
  objetive          Objetive[]
  invitation        Invitation[]
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  workspace   Workspace     @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId Int
  transaction Transaction[]

  @@index([workspaceId])
}

model Transaction {
  id          Int       @id @default(autoincrement())
  description String
  amount      Float
  date        DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId Int

  @@index([userId])
  @@index([categoryId])
  @@index([workspaceId])
}

model Objetive {
  id          Int       @id @default(autoincrement())
  description String
  amount      Float
  initDate    DateTime
  endDate     DateTime
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId Int

  @@index([workspaceId])
}

model Invitation {
  id            Int       @id @default(autoincrement())
  user          User      @relation("user", fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  invitedUser   User      @relation("invitedUser", fields: [invitedUserId], references: [id], onDelete: Cascade)
  invitedUserId String
  workspace     Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId   Int

  @@index([userId])
  @@index([invitedUserId])
  @@index([workspaceId])
}
